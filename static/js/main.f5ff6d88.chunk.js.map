{"version":3,"sources":["Components/SearchFilter/Filter.module.css","Components/Container/Container.module.css","Components/ContactsForm/ContactsForm.module.css","Components/Container/Container.js","Components/ContactsForm/ContactsForm.js","Components/SearchFilter/Filter.js","Components/ContactsList/ContactsList.js","App.js","index.js","Components/ContactsList/ContactsList.module.css"],"names":["module","exports","Container","children","className","styles","defaultProps","INITIAL_STATE","name","number","ContactForm","state","handleChange","event","currentTarget","value","setState","reset","handleSubmit","preventDefault","props","addContacts","this","style","onSubmit","label","input","onChange","type","pattern","title","required","placeholder","labelNumber","button","Component","Filter","filter","onHandleChange","ContactList","contacts","deleteContacts","list","map","id","item","textName","textNumber","onClick","App","contactFormState","contact","uuidv4","find","alert","prevState","changeFilter","contactId","localStorage","getItem","parseContacts","JSON","parse","console","log","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5ff6d88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1O2Kr\",\"input\":\"Filter_input__25Rrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1J-Bc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactsForm_ContactForm__2cSuB\",\"label\":\"ContactsForm_label__2H3Au\",\"input\":\"ContactsForm_input__2kNge\",\"button\":\"ContactsForm_button__3DH2R\",\"labelNumber\":\"ContactsForm_labelNumber__1sdV0\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport style from \"./ContactsForm.module.css\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addContacts(this.state);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={style.ContactForm} onSubmit={this.handleSubmit}>\n        <label className={style.label}>Name</label>\n        <input\n          className={style.input}\n          value={name}\n          onChange={this.handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Введите имя\"\n        />\n        <label className={style.labelNumber}>Number</label>\n        <input\n          className={style.input}\n          value={number}\n          onChange={this.handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Введите номер телефона\"\n        />\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport style from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, onHandleChange }) => {\n  return (\n    <div>\n      <h3 className={style.title}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onHandleChange}\n        className={style.input}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onHandleChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport style from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, deleteContacts }) => {\n  return (\n    <ul className={style.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.item}>\n          <span className={style.textName}>{name}:</span>\n          <span className={style.textNumber}>{number}</span>\n          <button\n            type=\"button\"\n            className={style.button}\n            onClick={() => deleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  deleteContacts: PropTypes.func,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./Components/Container/Container\";\nimport ContactForm from \"./Components/ContactsForm/ContactsForm\";\nimport Filter from \"./Components/SearchFilter/Filter\";\nimport ContactList from \"./Components/ContactsList/ContactsList\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContacts = (contactFormState) => {\n    const { name, number } = contactFormState;\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const isRepeat = this.state.contacts.find(\n      ({ name }) => name === contactFormState.name\n    );\n    isRepeat\n      ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n  changeFilter = (event) => {\n    const { value } = event.currentTarget;\n    this.setState({\n      filter: value,\n    });\n  };\n  deleteContacts = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n    console.log(parseContacts);\n\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm addContacts={this.addContacts} />\n\n          <h2>Contacts</h2>\n          <Filter filter={filter} onHandleChange={this.changeFilter} />\n          {contacts.length === 0 ? (\n            <p>There are no contacts in the phonebook. Please add contact</p>\n          ) : (\n            <ContactList\n              contacts={visibleContacts}\n              deleteContacts={this.deleteContacts}\n            />\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3OGHa\",\"item\":\"ContactsList_item__1SEeu\",\"textName\":\"ContactsList_textName__3r4M-\",\"textNumber\":\"ContactsList_textNumber__10edk\",\"button\":\"ContactsList_button__355w9\"};"],"sourceRoot":""}